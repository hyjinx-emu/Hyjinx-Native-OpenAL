name: publish

on:
  push:
  release:
    types: [ published ]

permissions:
  contents: write
  pull-requests: write

env:
  OPENAL_VERSION: 1.21.0 # This needs to be updated to match the OpenAL version being compiled.

jobs:
  prepare:
    runs-on: windows-latest

    outputs:
      version_number: ${{ steps.set_version_number.outputs.version_number }}
      version_suffix: ${{ steps.set_version_suffix.outputs.version_suffix }}
      full_version: ${{ steps.set_version_number.outputs.version_number }}${{ steps.set_version_suffix.outputs.version_suffix != '' && '-' || '' }}${{ steps.set_version_suffix.outputs.version_suffix }}

    steps:
      - name: Set version number
        id: set_version_number
        shell: bash
        run: echo "version_number=${{ env.OPENAL_VERSION }}" >> $GITHUB_OUTPUT

      - name: Set version suffix
        if: github.event.action != 'published'
        id: set_version_suffix
        shell: bash
        run: echo "version_suffix=preview.${{ github.run_number }}" >> $GITHUB_OUTPUT
  
  package:
    runs-on: windows-latest
    needs: prepare

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up NuGet
        uses: nuget/setup-nuget@v2
        with:
          nuget-api-key: ${{ secrets.NUGET_TOKEN }}
          nuget-version: latest

      - name: Package preview
        if: github.event.action != 'published'
        shell: powershell
        run: nuget pack Hyjinx.OpenAL.native.nuspec -OutputDirectory ./out -Version "${{ needs.prepare.outputs.version_number }}" -Suffix "preview.${{ needs.prepare.outputs.version_suffix }}"

      - name: Package release
        if: github.event.action == 'published'
        shell: powershell
        run: nuget pack Hyjinx.OpenAL.native.nuspec -OutputDirectory ./out -Version "${{ needs.prepare.outputs.version_number }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: ./out/*.nupkg

  publish:
    runs-on: windows-latest
    needs: package

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: dist/

      - name: Set up NuGet
        uses: nuget/setup-nuget@v2
        with:
          nuget-api-key: ${{ secrets.NUGET_TOKEN }}
          nuget-version: latest

      - name: Push package(s)
        shell: powershell
        run: |
          Get-ChildItem -Path "dist" -Filter *.nupkg | ForEach-Object {
            Write-Host "Pushing $($_.FullName)"
            nuget push $_.FullName -Source https://api.nuget.org/v3/index.json
          }

  post-publish:
    runs-on: ubuntu-latest
    needs: [ prepare, publish ]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: dist/
          
      - name: Publish
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.prepare.outputs.full_version }}
          artifacts: "dist/*.*"
          prerelease: ${{ github.event.action != 'published' }}
          generateReleaseNotes: ${{ github.event.action != 'published' }}
          allowUpdates: true
          omitBodyDuringUpdate: true
